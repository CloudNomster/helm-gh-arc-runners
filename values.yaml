gha-runner-scale-set:
  labels:
    app: gh-arc-runners
  githubConfigUrl: "https://github.com/CloudNomster"

  githubConfigSecret: controller-manager

  maxRunners: 3
  minRunners: 0

  # runnerGroup: "default"

  runnerScaleSetName: "nomsterrunner"
  containerMode:
    type: ""
  template:
## Docker in Docker
    spec:
      initContainers:
      - name: init-dind-externals
        image: ghcr.io/actions/actions-runner:latest
        command: ["cp", "-r", "-v", "/home/runner/externals/.", "/home/runner/tmpDir/"]
        volumeMounts:
          - name: dind-externals
            mountPath: /home/runner/tmpDir
      containers:
      - name: runner
        image: ghcr.io/actions/actions-runner:latest
        command: ["/home/runner/run.sh"]
        env:
          - name: DOCKER_HOST
            value: unix:///var/run/docker.sock
        volumeMounts:
          - name: work
            mountPath: /home/runner/_work
          - name: dind-sock
            mountPath: /var/run
      - name: dind
        image: docker:dind
        args:
          - dockerd
          - --host=unix:///var/run/docker.sock
          - --group=$(DOCKER_GROUP_GID)
        env:
          - name: DOCKER_GROUP_GID
            value: "123"
        securityContext:
          privileged: true
        volumeMounts:
          - name: work
            mountPath: /home/runner/_work
          - name: dind-sock
            mountPath: /var/run
          - name: dind-externals
            mountPath: /home/runner/externals
      volumes:
        - name: work
          emptyDir: {}
        - name: dind-sock
          emptyDir: {}
        - name: dind-externals
          emptyDir: {}
      serviceAccountName: arc-runner

# Kubernetes
#    spec:
#      initContainers:
#        - name: kube-init
#          image: ghcr.io/actions/actions-runner:latest
#          command: ["sudo", "chown", "-R", "1001:123", "/home/runner/_work"]
#          volumeMounts:
#            - name: work
#              mountPath: /home/runner/_work
#      containers:
#        - name: runner
#          image: ghcr.io/actions/actions-runner:latest
#          command: ["/home/runner/run.sh"]
#          env:
#            - name: ACTIONS_RUNNER_CONTAINER_HOOKS
#              value: /home/runner/k8s/index.js
#            - name: ACTIONS_RUNNER_POD_NAME
#              valueFrom:
#                fieldRef:
#                  fieldPath: metadata.name
#            - name: ACTIONS_RUNNER_REQUIRE_JOB_CONTAINER
#              value: "false"
#          volumeMounts:
#            - name: work
#              mountPath: /home/runner/_work
#      volumes:
#        - name: work
#          ephemeral:
#            volumeClaimTemplate:
#              spec:
#                accessModes: [ "ReadWriteOnce" ]
#                storageClassName: "vsphere-csi"
#                resources:
#                  requests:
#                    storage: 5Gi
#      serviceAccountName: arc-runner
  controllerServiceAccount:
    namespace: arc-systems
    name: gh-arc-gha-rs-controller